name: Build Config

on:
  workflow_dispatch:
  pull_request:
  push:
    paths:
      - ".github/workflows/**"
      - "home-manager/**"
      - "hosts/**"
      - "modules/**"
      - "flake.nix"
      - "flake.lock"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        user:
          - wafu
        host:
          - yoshika
          - raspi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install cross-compilation deps
        run: |
          sudo apt update
          sudo apt install -q -y \
            binfmt-support \
            gcc-aarch64-linux-gnu \
            qemu-system-aarch64 \
            qemu-user-static

      - name: Install Nix
        uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            extra-platforms = aarch64-linux
            max-jobs = auto
            system-features = big-parallel kvm

      - name: Install Cachix
        uses: cachix/cachix-action@v14
        with:
          name: 3waffel
          authToken: "${{secrets.CACHIX_AUTH_TOKEN}}"
          skipPush: true

      - uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Build home-manager config
        run: nix build -L .#homeConfigurations.${{ matrix.user }}.activationPackage --impure

      - name: Push home-manager cache
        run: nix eval --impure --json ".#homeConfigurations.${{ matrix.user }}.activationPackage.outPath" | sed 's/"\(.*\)"/\1/' | cachix push 3waffel

      - name: Build NixOS config
        run: nix build -L --no-link .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel

      - name: Push NixOS cache
        run: nix eval --json ".#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel.outPath" | sed 's/"\(.*\)"/\1/' | cachix push 3waffel

      - name: Build installer
        if: matrix.host == 'yoshika'
        run: |
          nix build '.#nixosConfigurations.${{ matrix.host }}.config.system.build.tarballBuilder'
          sudo ./result/bin/nixos-wsl-tarball-builder nixos-wsl.tar.gz

      - name: Upload installer
        if: matrix.host == 'yoshika'
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.host }}
          path: nixos-wsl.tar.gz
